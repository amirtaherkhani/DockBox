services:
  zitadel-init:
    user: ${UID}
    image: ghcr.io/zitadel/zitadel:latest
    container_name: zitadel-init
    command: init --config /zitadel.yaml
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - ZITADEL_EXTERNALDOMAIN=${DOMAIN_NAME}
      - ZITADEL_LOGSTORE_ACCESS_STDOUT_ENABLED=true
      - ZITADEL_FIRSTINSTANCE_ORG_HUMAN_PASSWORDCHANGEREQUIRED=true
      - ZITADEL_DATABASE_POSTGRES_HOST=zitadel-db.local
      - ZITADEL_DATABASE_POSTGRES_PORT=5432
      - ZITADEL_DATABASE_POSTGRES_DATABASE=zitadel
      - ZITADEL_DATABASE_POSTGRES_USER_USERNAME=zitadel_user
      - ZITADEL_DATABASE_POSTGRES_USER_PASSWORD=${POSTGRES_USER_PASSWORD}
      - ZITADEL_DATABASE_POSTGRES_USER_SSL_MODE=disable
      - ZITADEL_DATABASE_POSTGRES_ADMIN_USERNAME=root
      - ZITADEL_DATABASE_POSTGRES_ADMIN_PASSWORD=${POSTGRES_PASSWORD}
      - ZITADEL_DATABASE_POSTGRES_ADMIN_SSL_MODE=disable
      - ZITADEL_DEFAULTINSTANCE_ORG_HUMAN_USERNAME=${ADMIN_USERNMAE}
      - ZITADEL_DEFAULTINSTANCE_ORG_HUMAN_PASSWORD=${ADMIN_PASSWORD}
      - ZITADEL_DEFAULTINSTANCE_ORG_HUMAN_FIRSTNAME=${ADMIN_NAME}
      - ZITADEL_DEFAULTINSTANCE_ORG_HUMAN_LASTNAME=${ADMIN_LASTNAME}
      - ZITADEL_DEFAULTINSTANCE_ORG_HUMAN_EMAIL=${ADMIN_EMAIL}
      - ZITADEL_DEFAULTINSTANCE_ORG_HUMAN_EMAIL_VERIFIED=true
      - ZITADEL_DEFAULTINSTANCE_ORG_HUMAN_PREFERREDLANGUAGE=en
      - ZITADEL_DEFAULTINSTANCE_ORG_HUMAN_ROLES=IAM_OWNER
      - TZ=${TZ}
      - ZITADEL_AUTH_REQUEST_CACHE_ENABLED=${AUTH_REQUEST_CACHE_ENABLED}
      - ZITADEL_AUTH_REQUEST_CACHE_SIZE=${AUTH_REQUEST_CACHE_SIZE}
    networks:
      - traefik-network
    healthcheck:
      test:
        - CMD
        - /app/zitadel
        - ready
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${HOME}/.docker/zitadel/config/zitadel.yaml:/zitadel.yaml:ro
  zitadel:
    user: ${UID}
    container_name: zitadel
    hostname: zitadel-server
    extends:
      service: zitadel-init
    command: start-from-setup --init-projections --masterkey
      "${MASTER_KEY}"  --config /zitadel.yaml --steps /zitadel.yaml
    environment:
      - ZITADEL_EXTERNALPORT=443
      - ZITADEL_EXTERNALSECURE=true
      - ZITADEL_TLS_ENABLED=false
      - ZITADEL_DATABASE_POSTGRES_HOST=zitadel-db.local
      - ZITADEL_DATABASE_POSTGRES_PORT=5432
      - ZITADEL_DATABASE_POSTGRES_DATABASE=zitadel
      - ZITADEL_DATABASE_POSTGRES_USER_USERNAME=zitadel_user
      - ZITADEL_DATABASE_POSTGRES_USER_PASSWORD=${POSTGRES_USER_PASSWORD}
      - ZITADEL_DATABASE_POSTGRES_USER_SSL_MODE=disable
      - ZITADEL_DATABASE_POSTGRES_ADMIN_USERNAME=root
      - ZITADEL_DATABASE_POSTGRES_ADMIN_PASSWORD=${POSTGRES_PASSWORD}
      - ZITADEL_DATABASE_POSTGRES_ADMIN_SSL_MODE=disable
      - ZITADEL_AUTH_REQUEST_CACHE_ENABLED=${AUTH_REQUEST_CACHE_ENABLED}
      - ZITADEL_AUTH_REQUEST_CACHE_SIZE=${AUTH_REQUEST_CACHE_SIZE}
      - TZ=${TZ}
    networks:
      - traefik-network
    depends_on:
      zitadel-init:
        condition: service_completed_successfully
      postgres:
        condition: service_healthy
    labels:
      - traefik.enable=true
      - traefik.http.routers.zitadel.rule=Host(`${DOMAIN_NAME}`)
      - traefik.http.routers.zitadel.tls=true
      - traefik.http.routers.zitadel.entrypoints=web, websecure
      - traefik.http.routers.zitadel.tls.certresolver=letsencrypt
      - traefik.http.services.zitadel.loadbalancer.server.port=8080
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${HOME}/.docker/zitadel/config/zitadel.yaml:/zitadel.yaml:ro
  postgres:
    restart: always
    image: postgres:latest
    container_name: zitadel-db
    hostname: zitadel-db.local
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - TZ=${TZ}
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready
        - -d
        - db_prod
      interval: 5s
      timeout: 60s
      retries: 10
      start_period: 5s
    networks:
      - traefik-network
    volumes:
      - ${HOME}/.docker/zitadel/db:/var/lib/postgresql/data:rw'
      - /etc/localtime:/etc/localtime:ro
networks:
  traefik-network:
    external: true
